@model Dictionary<string, (int used, int remaining)>
@using Newtonsoft.Json;

@{
    ViewData["Title"] = "Leave Summary";
}

<h2>Leave Summary by Type</h2>

<table class="table table table-striped">
    <thead class="table-dark text-center">
        <tr>
            <th>Leave Type</th>
            <th>Used</th>
            <th>Remaining</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Key</td>
                <td class="text-center">@item.Value.used</td>
                <td class="text-center">@item.Value.remaining</td>
            </tr>
        }
    </tbody>
</table>

<h3>Leave Usage Breakdown</h3>
<canvas id="leavePieChart" width="400" height="400"></canvas>

<h3>Leave Requests Per Month</h3>
<canvas id="leaveBarChart" width="600" height="300"></canvas>

@section Scripts {
    <script>
        const labels = JSON.parse('@Html.Raw(ViewBag.LabelsJson ?? "[]")');
        const data = JSON.parse('@Html.Raw(ViewBag.DataJson ?? "[]")');

        const ctx = document.getElementById('leavePieChart').getContext('2d');
        const chart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Leave Used',
                    data: data,
                    backgroundColor: ['#36A2EB', '#FF6384', '#FFCE56'],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom',
                    },
                    title: {
                        display: true,
                        text: 'Leave Usage Breakdown'
                    }
                }
            }
        })
    </script>

    <script>
        const barLabels = JSON.parse('@Html.Raw(ViewBag.BarLabelsJson ?? "[]")');
        const barData = JSON.parse('@Html.Raw(ViewBag.BarDataJson ?? "[]")');

        const barCtx = document.getElementById('leaveBarChart').getContext('2d');
        const barChart = new Chart(barCtx, {
            type: 'bar',
            data: {
                labels: barLabels,
                datasets: [{
                    label: 'Approved Leave Requests',
                    data: barData,
                    backgroundColor: '#36A2EB'
                }]
            },
           options: {
               responsive: true,
               plugins: {
                    legend: { display: false },
                    title: {
                        display: true,
                        text: 'Monthly Leave Usage'
                    }
               },
               scales: {
                   y: {
                       beginAtZero: true,
                       precision: 0
                   }
               }
           }
        });
    </script>
}